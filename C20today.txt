1. Write a JAVAprogram to find maximum between two numbers.

import java.util.*;

public class HighestNumber {
     

public static void main(String args[])
  {
    

    int a,b;



 Scanner s= new Scanner(System.in);
 System.out.print("Enter the first number : ");
 a=s.nextInt();
 System.out.print("Enter the second number: ");
 b=s.nextInt();
 

    if(a>b)
    {
      
      System.out.println(a+"  is highest number");
    }
   
    else
    {
       
      System.out.println(b+"  is highest number");
    }
     
    }
 
}

2. Write a JAVAprogram to find maximum between three numbers.

 import java.util.*;

public class HighestNumber {
     

public static void main(String args[])
  {
    

    int a,b,c;



 Scanner s= new Scanner(System.in);
 System.out.print("Enter the first number : ");
 a=s.nextInt();
 System.out.print("Enter the second number: ");
 b=s.nextInt();
 System.out.print("Enter the third number : ");
 c=s.nextInt();


    if(a>b&&a>c)
    {
      
      System.out.println(a+"  is highest number");
    }
    else if(b>c)
    {
      
      System.out.println(b+"  is highest number");
    }
    else
    {
       
      System.out.println(c+"  is highest number");
    }
     
    }
 
}

3. Write a JAVAprogram to check whether a number is negative, positive or zero.

import java.util.*;
 
class PosNegZero
{
    public static void main(String []s)
    {
        int num;
        //Scanner class to read value
        Scanner sc=new Scanner(System.in);
         
        System.out.print("Enter any integer number: ");
        num=sc.nextInt();
         
        //check condition for +ve, -ve and Zero
        if(num>0)
            System.out.println(num + " is POSITIVE NUMBER.");
        else if(num<0)
            System.out.println(num + " is NEGATIVE NUMBER.");
        else
            System.out.println("IT's ZERO.");
         
    }
}

4. Write a JAVAprogram to check whether a number is divisible by 5 and 11 or not.

import java.util.*;
class Divisibility
{
public static void main(String[] args)
{
    Scanner sc = new Scanner(System.in);
System.out.println("Enter a number : ");
int a=sc.nextInt();
if(a%5==0&&a%11==0)
{
System.out.println("Given number is divisible by 5 and 11 ");
}
else
{
System.out.println("Given number is not divisible by 5 and 11 ");
}
}
}

5. Write a JAVAprogram to check whether a number is even or odd.

import java.util.*;
class EvenOdd
  {
    public static void main(String[] args)
    {
             int i;
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter how many Even and Odd numbers ");
      int n=sc.nextInt();
      for(i=1;i<=n;i++)
        {
          if(i%2!=0)
          {
            System.out.println("Odd number: "+i);
            }
         }
      System.out.println("");
      for(i=1;i<=n;i++)
        {
          if(i%2==0)
          {
            System.out.println("Even number : "+i);
          }
        }
        
    }
  }

6. Write a JAVAprogram to check whether a year is leap year or not.

import java.util.Scanner;
public class LeapYear {
   public static void main(String[] args){
      int year;
      System.out.println("Enter an Year :: ");
      Scanner sc = new Scanner(System.in);
      year = sc.nextInt();

      if (((year % 4 == 0) && (year % 100!= 0)) || (year%400 == 0))
         System.out.println("Specified year is a leap year");
      else
         System.out.println("Specified year is not a leap year");
   }
}

7. Write a JAVAprogram to check whether a character is alphabet or not.

public class Alphabet {

    public static void main(String[] args) {

        char c = '*';

        if( (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'))
            System.out.println(c + " is an alphabet.");
        else
            System.out.println(c + " is not an alphabet.");
    }
}

8. Write a JAVAprogram to input any alphabet and check whether it is vowel or    consonant.

public class VowelConsonant {

    public static void main(String[] args) {

        char ch = 'i';

        if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u' )
            System.out.println(ch + " is vowel");
        else
            System.out.println(ch + " is consonant");

    }
}

9. Write a JAVAprogram to input any character and check whether it is alphabet, digit    or special character.

import java.util.Scanner;

public class AlphabetDigitSpecial {

    public static void main(String[] args) {

        Scanner scanner = new Scanner(System.in);

        System.out.println("Enter any caracter : ");
        char ch = scanner.next().charAt(0);

        if((ch >= 'a' && ch <= 'z') || (ch >= 'A' && ch <= 'Z')) {

             System.out.println(ch + " is A ALPHABET.");

        } else if(ch >= '0' && ch <= '9') {

             System.out.println(ch + " is A DIGIT.");

        } else {

             System.out.println(ch + " is A SPECIAL CHARACTER.");
        }
    
    }
}

10. Write a JAVAprogram to check whether a character is uppercase or lowercase     alphabet.

public class Demo {
   public static void main(String []args) {
      System.out.println("Checking for Uppercase character...");
      char val = 'K';
      System.out.println("Character: "+val);
      if (Character.isUpperCase(val)) {
         System.out.println("Character is in Uppercase!");
      }else {
         System.out.println("Character is in Lowercase!");
      }
   }
}

11. Write a JAVAprogram to input week number and print week day.

import java.util.Scanner;
public class Exercise5 {

    
  public static void main(String[] args)
    {
        Scanner in = new Scanner(System.in);
        System.out.print("Input number: ");
        int day = in.nextInt();

        System.out.println(getDayName(day));
    }

    // Get the name for the Week
    public static String getDayName(int day) {
        String dayName = "";
        switch (day) {
            case 1: dayName = "Monday"; break;
            case 2: dayName = "Tuesday"; break;
            case 3: dayName = "Wednesday"; break;
            case 4: dayName = "Thursday"; break;
            case 5: dayName = "Friday"; break;
            case 6: dayName = "Saturday"; break;
            case 7: dayName = "Sunday"; break;
            default:dayName = "Invalid day range";
        }

        return dayName;
    }
}

12. Write a JAVAprogram to count total number of notes in given amount.

import java.util.*;
class MoneyCount
  {
    public static void main(String[] args)
    {
       int Rs[]={2000,500,100,50,20,10,5,2,1}; 
 
     Scanner sc=new Scanner(System.in);
         System.out.println("Enter amount");
      int amount=sc.nextInt();
        int copy=amount; 
        int count=0;
 
        System.out.println("Notes      count  =   amount");
    

    System.out.println(" ");
        for(int i=0;i<9;i++) 
        {
            // counting number of notes.
            count=amount/Rs[i]; 
            if(count!=0) 
            {
                System.out.println(Rs[i] +"    "+"   :  "+count+"  =   "+Rs[i]*count);
            }
           
            amount=amount%Rs[i]; 
        
          
        }
    }
  }

13. Write a JAVAprogram to input marks of five subjects Physics, Chemistry, Biology,     Mathematics and Computer. Calculate percentage and grade according to     following:
    Percentage >= 90% : Grade A
    Percentage >= 80% : Grade B
    Percentage >= 70% : Grade C
    Percentage >= 60% : Grade D
    Percentage >= 40% : Grade E
    Percentage < 40% : Grade F

import java.util.*;
public class Grades {
    public static void main(String[] args) {
      
        Scanner in = new Scanner(System.in);

        System.out.println("Enter the marks of five subjects::\n");
       System.out.print("Physics : ");
        float sub_1 = in.nextFloat();
       System.out.print("Chemistry : ");
        float sub_2 = in.nextFloat();
       System.out.print("Biology : ");
        float sub_3 = in.nextFloat();
       System.out.print("Mathematics : ");
        float sub_4 = in.nextFloat();
       System.out.print("Computers : ");
        float sub_5 = in.nextFloat();
         

        float total;
        float average;
        float percentage;
        char grade;

        
        total = sub_1 + sub_2 + sub_3 + sub_4 + sub_5;
        average = (float)(total / 5.0);
        percentage = (float)((total / 500.0) * 100);

      
        if (average >= 90)
            grade = 'A';
        else if (average >= 80 && average < 90)
            grade = 'B';
        else if (average >= 70 && average < 80)
            grade = 'C';
        else if (average >= 60 && average < 70)
            grade = 'D';
        else
            grade = 'E';


        System.out.println("The Percentage    = " + percentage + "%");
        System.out.println("The Grade         = '" + grade + "'");
    }
}



14. Write a JAVAprogram to input basiJAVAsalary of an employee and calculate its Gross     salary according to following:
    BasiJAVASalary <= 10000 : HRA = 20%, DA = 80%
    BasiJAVASalary <= 20000 : HRA = 25%, DA = 90%
    BasiJAVASalary > 20000 : HRA = 30%, DA = 95%

import java.util.*;
class GrossSalary
  {
    public static void main(String[] args)
    {

      double basic;
      double gross;
      double da;
      double hra;

    /* Input basic salary of employee */
    System.out.println("Enter basic salary of an employee: ");
      Scanner sc=new Scanner(System.in);
       basic=sc.nextDouble();


    /* Calculate D.A and H.R.A according to specified conditions */
    if(basic <= 10000)
    {
        da  = basic * 0.8;
        hra = basic * 0.2;
    }
    else if(basic <= 20000)
    {
        da  = basic * 0.9;
        hra = basic * 0.25;
    }
    else
    {
        da  = basic * 0.95;
        hra = basic * 0.3;
    }

    /* Calculate gross salary */
    gross = basic + hra + da;

    System.out.println("GROSS SALARY OF EMPLOYEE = "+gross);

    }
}


15. Write a JAVAprogram to input electricity unit charges and calculate total     electricity bill according to the given condition:
    For first 50 units Rs. 0.50/unit
    For next 100 units Rs. 0.75/unit
    For next 100 units Rs. 1.20/unit
     For unit above 250 Rs. 1.50/unit
     An additional surcharge of 20% is added to the bill

import java.util.*;
class ElectricityBill
  {
    public static void main(String[] args)
    { 
        // declare and initialize variable units  
        int units;  
        // variable to calculate electricity bill to pay  
        double billToPay = 0;  
        double surcharge = 0.2;


       Scanner sc = new Scanner(System.in);  
  
        System.out.println("Enter number of units for calculating electricity bill.");  
        units = sc.nextInt();  
        // check whether units are less than 50  
        if(units <=50)  
        {  
            billToPay = units * 0.50;  
        
        }  
        // check whether the units are less than 150 
        else if(units>50&&units<150){  
            billToPay = 50*0.50+(units-50)*0.75;  
          
        }
          //check whether the units are less than 250
        else if(units>150&&units < 250){  
            billToPay = 50 * 0.50 +100 * 0.75+ (units - 150) * 1.20;  
          
        } 
          
        // check whether the units are greater than 250
        else if(units > 250)  
        {  
            billToPay = 50 * 0.50 + 100 * 0.75+ 100 * 1.20 + (units - 250) * 1.50;  
          
        }  
       surcharge=billToPay*(0.2);
      double totalbill=surcharge+billToPay;
        System.out.println("The electricity bill for " +units+ " is : " +totalbill);   
    }   
}  
    

16. Write a JAVAprogram to print day of week name using switch case.

class WeekDays
{
    public static void main(String s[])
    {
        int day = 2;
        
        switch(day)
        {
            case 1:
                System.out.println("Monday");
                break;
            case 2:
                System.out.println("Tuesday");
                break;
            case 3:
                System.out.println("Wednesday");
                break;
            case 4:
                System.out.println("Thursday");
                break;
            case 5:
                System.out.println("Friday");
                break;
            default:
                System.out.println("Weekend");
                break;
        }
    }
}

17. Write a JAVAprogram to print all natural numbers from 1 to n. - using while loop

import java.util.*;
class Naturalnumbers
  {
    public static void main(String[] args)
    {
      int i=1;
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a number");
      int n=sc.nextInt();
      while(i<=n)
        {
          System.out.println(i);
          i=i+1;
        }
    }
  }

18. Write a JAVAprogram to print all natural numbers in reverse (from n to 1). -     using while loop

import java.util.*;
class HelloWorld
{
public static void main(String[] args)
{
  int n=100;

   while(n>=1)
   {
     System.out.print(n+" ");
      n=n-1;
   }
}
}

19. Write a JAVAprogram to print all alphabets from a to z. - using while loop

class HelloWorld
{
 
    public static void main(String[] args)
    {
        // Declare the variables
        char i='A';
 
        // Display the alphabets
        System.out.printf("The Alphabets from A to Z are: \n");
 
        // Traverse each character
        // with the help of for loop
       while (i <= 'Z') {
			System.out.print(i + " ");
			i++;
		}
    }
}

20. Write a JAVAprogram to print all even numbers between 1 to 100. - using while     loop

class Even_numbers
{
public static void main(String[] args)
{
   int i=1;
   int n=100;
   while(i<=n)
   {
     if(i%2==0)
     {
        System.out.print(i+" ");
     }
     i++;
   }
}
}

21. Write a JAVAprogram to print all odd number between 1 to 100.

class Even_numbers
{
public static void main(String[] args)
{
   int i=1;
   int n=100;
   while(i<=n)
   {
     if(i%2!=0)
     {
        System.out.print(i+" ");
     }
     i++;
   }
}
}

22. Write a JAVAprogram to find sum of all natural numbers between 1 to n.

public class SumOfNaturalNumber1  
{  
public static void main(String[] args)   
{  
int i, num = 10, sum = 0;  
  
for(i = 1; i <= num; ++i)  
{  

sum = sum + i;  
}  

System.out.println("Sum of First 10 Natural Numbers is = " + sum);  

}  
}  

23. Write a JAVAprogram to find sum of all even numbers between 1 to n.

class Even_numbers
{
public static void main(String[] args)
{
   int i=1;
   int n=100;
   int sum=0;
   while(i<=n)
   {
     if(i%2==0)
     {
      sum=sum+i;  
     }
     i++;
   }
  System.out.println("Sum of all even numbers : "+sum);

}
}

24. Write a JAVAprogram to find sum of all odd numbers between 1 to n.

class Even_numbers
{
public static void main(String[] args)
{
   int i=1;
   int n=100;
   int sum=0;
   while(i<=n)
   {
     if(i%2!=0)
     {
      sum=sum+i;  
     }
     i++;
   }
  System.out.println("Sum of all even numbers : "+sum);

}
}

25. Write a JAVAprogram to print multiplication table of any number.

import java.util.*;
class MultiplicationTable
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter What table do you want in digits(1to1000)");
      int table=sc.nextInt();
      System.out.println("Enter how many numbers of the table do you have(1to1000)");
      int n=sc.nextInt();
      for(int i=1;i<=n;i++)
        {
          System.out.println(table+"  x  "+i+"   =  "+table*i);

        }
    }
  }

26. Write a JAVAprogram to count number of digits in a number.

import java.util.*;
class CountDigits
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a Number");
      int n=sc.nextInt();
      int sum=0;
      int count=0;
      int temp=n;
      while(n>0)
        {
          temp=n%10;
          sum=sum+temp;
          n=n/10;
          count=count+1;
        }
      System.out.println("Count the digits of a Number : "+count);   
      }
  }

27. Write a JAVAprogram to find first and last digit of a number.

import java.util.*;
class FirstLastDigit
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a Number");
      int number=sc.nextInt();
      //First Digit
      int temp=number;
      while(number>10)
        {
          number=number/10;
        }
      System.out.println("First Digit : "+number);
      //Last Digit
      while(temp>=10)
        {
          temp=temp%10;
          System.out.println("Last Digit  : "+temp);
        }
    }
  }

28. Write a JAVAprogram to find sum of first and last digit of a number.

import java.util.*;
class SumFirstLastDigit
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a Number");
      int number=sc.nextInt();
      //First Digit
      int temp=number;
      while(number>10)
        {
          number=number/10;
        }
      System.out.println("First Digit : "+number);
      //Last Digit
      while(temp>=10)
        {
          temp=temp%10;
          System.out.println("Last Digit  : "+temp);
        }
      int total=number+temp;
      System.out.println("Sum of First and Last Digit number is : "+total);
    }
  }

29. Write a JAVAprogram to check whether a number is palindrome or not.

import java.util.*;
class Palindrome
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a Number");
      int n=sc.nextInt();
      int sum=0;
      int temp=n;
      while(n>0)
        {
          temp=n%10;
          sum=sum*10+temp;
          n=n/10;
        }
      if(sum==temp)
      {
        System.out.println("Palindrome number is  : "+sum);
      }
      else{
        System.out.println("This number is not a Palindrome number : "+sum);
      }
    }
  }

30. Write a JAVAprogram to calculate sum of digits of a number.

import java.util.*;
class SumOfDigits
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a Number");
      int n=sc.nextInt();
      int sum=0;
      int temp=n;
      while(n>0)
        {
          temp=n%10;
          sum=sum+temp;
          n=n/10;
        }
      System.out.println("Sum of the digits of a Number : "+sum);    }
  }


31. Write a JAVAprogram to calculate product of digits of a number.

import java.util.*;
class ProductOfDigits
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a Number");
      int n=sc.nextInt();
      int product=1;
      int temp=n;
      while(n>0)
        {
          temp=n%10;
          product=product*temp; 
          n=n/10;
        }
      System.out.println("Product of the digits of a Number : "+product);    
    }
  }

32. Write a JAVAprogram to enter a number and print its reverse.

import java.util.*;
class ReverseNumber
  {
    public static void main(String[] args)
    {
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter a Number");
      int n=sc.nextInt();
      int sum=0;
      int temp=n;
      while(n>0)
        {
          temp=n%10;
          sum=(sum*10)+temp;
          n=n/10;
        }
      System.out.println("Sum of the digits of a Number : "+sum);   
      }
  }

33. Write a JAVAprogram to find frequency of each digit in a given integer.

import java.util.*;
class Frequency
{
    public static void main(String arr[])
    {
        Scanner sc=new Scanner(System.in);
        int number,i,count,digit,temp;
        System.out.println("Enter any Number : ");
        number=sc.nextInt();
         System.out.println("Digit\tFrequency");
        for(i=0;i<=9;i++)
        {
            count=0;
            temp=number;
            while(temp>0)
            {
                digit=temp%10;
                if(digit==i)
                {
                    count++;
                }
                temp=temp/10;
            }
            if(count>0)
            {
                System.out.println(i+"\t"+count);
            }
        }
    }
}



34. Write a JAVAprogram to enter a number and print it in words.

import java.util.Scanner;
class Solution {
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        System.out.println("enter the number");
        int n=sc.nextInt();
        int n1=n,n2=n;
        int b=n1%10,a=n2/10; //  n1/10 means last digit is removed and n2%10 means last digit by modulus
 
        String[] single_digits = new String[]{"zero","one","two","three","four","five", "six","seven","eight","nine"};
        String[] two_digits = new String[]{"","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen", "nineteen"};
        String[] tens_multiple = new String[]{"","","twenty","thirty","forty","fifty","sixty", "seventy","eighty","ninety"};
        if(a==1)
        {
            System.out.println(two_digits[b+1]);
        }
        else if(b==0)
            System.out.println(tens_multiple[a]);
        else
            System.out.println(tens_multiple[a]+"-"+single_digits[b]);
    }
}

35. Write a JAVAprogram to print all ASCII character with their values.

public class ASCIIofAllCharacters1 {
	public static void main(String[] args) 
	{
		int i = 0;
		
		while(i <= 255)
		{
			System.out.println(" The ASCII value of " + (char)i + "  =  " + i);
			i++;
		}
	}
}

36. Write a JAVAprogram to find power of a number using for loop.

class Main {
  public static void main(String[] args) {

    int base = 3, exponent = 5;
    double result = Math.pow(base, exponent);

    System.out.println("Answer = " + result);
  }
}


37. Write a JAVAprogram to find all factors of a number.

import java.util.*;
public class Main {

  public static void main(String[] args) {

    // positive number
Scanner sc=new Scanner(System.in);
    int number = sc.nextInt();

    System.out.print("Factors of " + number + " are: ");

   
    for (int i = 1; i <= number; ++i) 
     {

       if (number % i == 0) 
      {
       System.out.print(i + " ");
      }

      }
    }
  }


38. Write a JAVAprogram to calculate factorial of a number.

import java.util.*;
class FactorialExample{  
 public static void main(String args[]){  
  int i,fact=1; 
Scanner sc=new Scanner(System.in); 
  int number=sc.nextInt();  
  for(i=1;i<=number;i++){    
      fact=fact*i;    
  }    
  System.out.println("Factorial of "+number+" is: "+fact);    
 }  
} 

39. Write a JAVAprogram to check whether a number is Prime number or not.

import java.util.*;
public class Main {

  public static void main(String[] args) {

Scanner sc=new Scanner(System.in);
    int num = sc.nextInt();
    int count = 0;
    for (int i = 2; i <= num / 2; ++i) 
    {
    
      if (num % i == 0) 
      {
        count++;
        break;
      }
    }

    if (count==0)
      System.out.println(num + " is a prime number.");
    else
      System.out.println(num + " is not a prime number.");
  }
}

40. Write a JAVAprogram to print all Prime numbers between 1 to n.

import java.util.*;
class PrimeNumbers {
    public static void main(String[] args) {
        int i;
        int count;
        Scanner sc=new Scanner(System.in);
        System.out.println("Enter a number : ");
        int num=sc.nextInt();
       for (i = 1; i <= num; i++) 
    {
     count = 0;
       
     for (int j = 2; j <= i / 2; j++) 
     {

   
        if (i % j == 0) 
        {
          count++;
          break;
        }
     }

      
      if (count == 0) 
      {
      System.out.println("\t"+i);
      }

    }
    
    }
}


41. Write a JAVAprogram to find sum of all prime numbers between 1 to n.

import java.util.*;
class prime {
    public static void main(String[] args) {
        int i;
        int count;
       int temp=0;
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter a number : ");
        int end=sc.nextInt();
       for (i = 1; i <= end; i++) 
    {
     count = 0;
       
     for (int j = 2; j <= i / 2; j++) 
     {

 
        if (i % j == 0) 
        {
          count++;
          break;
        }
     }


      
      if (count == 0) 
      {
       temp=temp+i;
        System.out.print("\t"+i);
      }
      

    }
    System.out.println(" = "+temp);
    }
}

42. Write a JAVAprogram to find all prime factors of a number.

import java.util.Scanner;

public class PrimeFactors {
   public static void main(String args[]){
      int number;
      Scanner sc = new Scanner(System.in);
      System.out.println("Enter a number ::");
      number = sc.nextInt();
     
      for(int i = 2; i< number; i++) {
         while(number%i == 0) {
            System.out.println(i+" ");
            number = number/i;
         }
      }
      if(number >2) {
         System.out.println(number);
      }
   }
}

43. Write a JAVAprogram to check whether a number is Armstrong number or not.

import java.util.*;
public class Armstrong {

    public static void main(String[] args) {
Scanner sc=new Scanner(System.in);
        int number = sc.nextInt(); 
         int n, remainder, result = 0;

        n = number;

        while (n != 0)
        {
            remainder = n % 10;
            result += Math.pow(remainder, 3);
            n /= 10;
        }

        if(result == number)
            System.out.println(number + " is an Armstrong number.");
        else
            System.out.println(number + " is not an Armstrong number.");
    }
}

44. Write a JAVAprogram to print all Armstrong numbers between 1 to n.

import java.util.Scanner;
public class ArmstrongBetweenTwoNumbers {
   public static void main(String args[]){
      int num1, num2;
      Scanner sc = new Scanner(System.in);
      System.out.println("Enter the first number ::");
      num1 = sc.nextInt();
      System.out.println("Enter the second number ::");
      num2 = sc.nextInt();

      for (int i = num1; i<num2; i++){
         int check, rem, sum = 0;
         check = i;
         while(check != 0) {
            rem = check % 10;
            sum = sum + (rem * rem * rem);
            check = check / 10;
         }
         if(sum == i){
            System.out.println(""+i+" is an Armstrong number.");
         }
      }
   }
}

45. Write a JAVAprogram to check whether a number is Perfect number or not.

import java.util.Scanner;

public class PerfectNumberUsingWhile {
	private static Scanner sc;	
	public static void main(String[] args) {
		int i = 1, Number, Sum = 0 ;
		sc = new Scanner(System.in);		
		System.out.println("Please Enter any Number: ");
		Number = sc.nextInt();

		while(i < Number) {
			if(Number % i == 0)  {
				Sum = Sum + i;
			}
			i++;
		}
		if (Sum == Number) {
			System.out.format("%d is a Perfect Number", Number);
		}
		else {
			System.out.format("%d is NOT a Perfect Number", Number);
		}
	}
}

46. Write a JAVAprogram to print all Perfect numbers between 1 to n.

import java.util.Scanner;
class PerfectNumberWithJava
{
public static void main(String main[])
{
    Scanner sc = new Scanner(System.in);
    System.out.println("Enter Start Number");
    int start=sc.nextInt();
    System.out.println("Enter End Number");
    int end=sc.nextInt();
    System.out.println("Perfect Numbers between " + start + " and " + end + " are :");
    for (int i=start; i<=end; i++)
    {
    int sum=0;
    for (int j=1 ; j<i;j++)
        {
            if (i % j==0)  sum=sum+j;
        }
     if (i==sum) System.out.print(i + "\t");
    }
}
}

47. Write a JAVAprogram to check whether a number is Strong number or not.


import java.util.*;
class HelloWorld  {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        System.out.print("Enter a NUmber : ");
        int n=sc.nextInt();
        int temp;
        int remainder;
        int fact=0;
        temp=n;
        while(temp>0)
        {
            int sum=1;
            
            remainder=temp%10;
            int i=1;
            while(i<=remainder)
            {
                
                sum=sum*i;
                i=i+1;
            }
            fact=0+sum;
            temp=temp/10;
          
        }
        if(fact==n)
        {
           System.out.println(n+"Yes , it's a strong number");   
        }
       else
        {
         System.out.println("Not a Strong number");
       }
    }
}



48. Write a JAVAprogram to print all Strong numbers between 1 to n.

import java.util.Scanner;

public class Example2 {
	private static Scanner sc;
	public static void main(String[] args) 
	{
		int Number, Temp, Reminder, Sum = 0, i, Factorial;
		sc = new Scanner(System.in);
		
		System.out.print(" Please Enter any Number : ");
		Number = sc.nextInt();		
		
		for(Temp = Number; Temp > 0; Temp = Temp /10)
		{
			Factorial = 1; 
			
		    Reminder = Temp % 10;
		    for(i = 1; i <= Reminder; i++)
		    {
		     	Factorial = Factorial * i;
		    }
		    System.out.println(" The Factorial of " + Reminder + "  =  " + Factorial);
		     Sum = Sum + Factorial;
		}
		
		System.out.println(" The Sum of the Factorials " + Number + " =  " + Sum);
		
		if ( Number == Sum )
		{
			System.out.println("\n " + Number + " is a Strong Number");
		}
		else
		{
		   System.out.println("\n " + Number + " is Not");
		}
	}
}
 
49. Write a JAVAprogram to print Fibonacci series up to n terms

import java.util.*;
class FibonacciExample1{  
public static void main(String args[])  
{    
 int n1=0,n2=1,n3,i;
Scanner sc=new Scanner(System.in);
 int count=sc.nextInt();    
 System.out.print(n1+" "+n2); 
    
 for(i=2;i<count;++i)   
 {    
  n3=n1+n2;    
  System.out.print(" "+n3);    
  n1=n2;    
  n2=n3;    
 }    
  
}
}

50. Write a JAVAprogram to print all negative elements in an array.

public class NegativeArrayItems {
	
	public static void main(String[] args) {
		int j = 0;
		int[] Neg_arr = {-40, 15, -4, 11, -8, -13, 22, 16, -11, -99, 55, 18, -60};
		
		
		System.out.print("\nList of Negative Numbers in NEG Array : ");
		while(j < Neg_arr.length) 
		{
			if(Neg_arr[j] < 0) {
				System.out.format("%d ", Neg_arr[j]);
			}
			j++;
		}
	}
}

51. Write a JAVAprogram to find second largest element in an array.

public class SecondLargestNumberInAnArray {
   public static void main(String args[]){
      int temp, size;
      int array[] = {10, 20, 25, 63, 96, 57};
      size = array.length;

      for(int i = 0; i<size; i++ ){
         for(int j = i+1; j<size; j++){

            if(array[i]>array[j])
            {
               temp = array[i];
               array[i] = array[j];
               array[j] = temp;
            }
         }
      }
      System.out.println("Third second largest number is:: "+array[size-2]);
   }
}


52. Write a JAVAprogram to find maximum and minimum element in an array. 

import java.util.*;
public class test
{
  public static void main(String[] args)
  {
       
       Scanner sc=new Scanner(System.in);
       int arr[]=new int[10];
       System.out.println("Enter elements in array");
       int min=Integer.MAX_VALUE;
       int max=Integer.MIN_VALUE;
       for(int i=0;i<=9;i++)
       {
         arr[i]=sc.nextInt();
         if(arr[i]<min)
           {
           min=arr[i];
           }
         if(arr[i]>max)
         {
           max=arr[i];
         }
       }
       System.out.println("Maximum element is "+max);
       System.out.println("Minimum element is "+min);
       
       
  }
 

53. Write a JAVAprogram to count total number of even and odd elements in an array.

import java.util.Scanner;
public class HelloWorld {

	public static void main(String[] args) 
	{
		int Size, i;
		int evenCount = 0, oddCount = 0;
		Scanner sc = new Scanner(System.in);
	 
		System.out.print(" Please Enter Number of elements in an array : ");
		Size = sc.nextInt();	
		
		int [] a = new int[Size];
		
		System.out.print(" Please Enter " + Size + " elements of an Array  : ");
		for (i = 0; i < Size; i++)
		{
			a[i] = sc.nextInt();
		}   

		for(i = 0; i < Size; i++)
		{
			if(a[i] % 2 == 0)
			{
				evenCount++;
			}
			else
			{
				oddCount++;
			}
		}		
		System.out.println("\n Total Number of Even Numbers in this Array = " + evenCount);
		System.out.println("\n Total Number of Odd  Numbers in this Array = " + oddCount);
	}
}


54. Write a JAVAprogram to count total number of negative elements in an array.

import java.util.Scanner;

public class CountNegativeArrayItems1 {
	private static Scanner sc;
	
	public static void main(String[] args) {
		int Size, i, count = 0;
		int[] count_NegArr = new int[10];
		
		sc = new Scanner(System.in);
		
		System.out.print("\nPlease Enter the CNT NEG Array size  : ");
		Size = sc.nextInt();
		
		System.out.format("\nEnter CNT NEG Array %d elements : ", Size);
		for(i = 0; i < Size; i++) 
		{
			count_NegArr[i] = sc.nextInt();
		}
	
		for(i = 0; i < Size; i++) 
		{
			if(count_NegArr[i] < 0) {
				count++;
			}
		}
		System.out.println("\nThe Total Number of Negative Array Items = " + count);
	}
}

55. Write a JAVAprogram to copy all elements from an array to another array.

public class Test {
    public static void main(String[] args)
    {
        int a[] = { 1, 8, 3 };
 
        
        int b[] = new int[a.length];
 
        
        b = a;
 
        b[0]++;
 
        System.out.println("Contents of a[] ");
        for (int i = 0; i < a.length; i++)
            System.out.print(a[i] + " ");
 
        System.out.println("\n\nContents of b[] ");
        for (int i = 0; i < b.length; i++)
            System.out.print(b[i] + " ");
    }
}


56. Write a JAVAprogram to delete an element from an array at specified position.

import java.util.Arrays;
import java.util.Scanner;

public class Main
{
    public static void main(String[] args)
    {
        Scanner sc=new Scanner(System.in);
        int n;    
        System.out.println("Enter the number of elements :");
        n=sc.nextInt();   
        
        Integer arr[]=new Integer[n];   
        System.out.println("Enter the elements of the array :");
        for(int i=0;i<n;i++)   
        {
            arr[i]=sc.nextInt();
        }
        System.out.println("Enter the element you want to remove ");
        int elem = sc.nextInt();
    
    for(int i = 0; i < arr.length; i++)
    {
      if(arr[i] == elem)   
      {
        
        for(int j = i; j < arr.length - 1; j++)
        {
            arr[j] = arr[j+1];
        }
        break;
      }
    }
      
       System.out.println("Elements after deletion " );
       for(int i = 0; i < arr.length-1; i++)
       {
             System.out.print(arr[i]+ " ");
       }  
    }
}

57. Write a JAVAprogram to count frequency of each element in an array.

import java.lang.*;

class Main
{
    public static void main (String[] args) {
        int[] arr = {5, 8, 5, 7, 8, 10};
        int size = arr.length;
        countFrequency(arr, size);
    }

    static void countFrequency(int[] array, int size)
    {

        for (int i = 0; i < size; i++){
            int flag = 0;
            int count = 0;

            for (int j = i+1; j < size; j++){
                if (array[i] == array[j]){
                    flag = 1;
                    break;
                }
            }

           // The continue keyword is used to end the current iteration 
           // in a for loop (or a while loop), and continues to the next iteration
            if (flag == 1)
                continue;

            for (int j = 0;j<=i;j++){
                if (array[i] == array[j])
                    count++;
            }
            System.out.println(array[i]+": "+count);
        }
    }
}



58. Write a JAVAprogram to print all unique elements in the array.

public class Example {
   public static void main (String[] args) {
      int arr[] = {1, 5, 9, 1, 4, 9, 6, 5, 9, 7};
      int n = arr.length;
      int i, j;
      System.out.print("The array is: ");
      for (i = 0; i < n; ++i)
      System.out.print(arr[i] + " ");
      System.out.print("\nThe distinct elements of above array are: ");
      for (i = 0; i < n; i++) {
         for (j = 0; j < i; j++)
         if (arr[i] == arr[j])
            break;
         if (i == j)
         System.out.print( arr[i] + " ");
      }
   }
}


59. Write a JAVAprogram to count total number of duplicate elements in an array.

class HelloWorld {
    public static void main(String[] args)
    {
  
        int A[] = { 1, 6, 4, 6, 4, 8, 2, 4, 1, 1 };
  
        int max = Integer.MIN_VALUE;
        for (int i = 0; i < A.length; i++) {
            if (A[i] > max)
                max = A[i];
        }
  
        int B[] = new int[max + 1];
        for (int i = 0; i < A.length; i++) {
  
            
            B[A[i]]++;
        }
        for (int i = 0; i <= max; i++) {
            
            if (B[i] > 1)
                System.out.println(i + "-" + B[i]);
        }
    }
}

60. Write a JAVAprogram to find length of a string and compare and concatenate two     strings.

public class StringMethods 
 { 
       public static void main(String[] args) 
    { 
         String s1 = "Welcome"; 
         System.out.println("s1.length() = "+ s1.length()); 
         System.out.println("s1.charAt(1) = "+ s1.charAt(1)); 
         System.out.println("s1.concat(\"Everybody\") = "+s1.concat(" Everyboday")); 
     } 
 } 

61. Write a JAVAprogram to find total number of alphabets, digits or special     character in a string.

class Alphabets
  {
    public static void main(String[] args)
    {
      char ch;
      Scanner sc=new Scanner(System.in);
      System.out.println("Enter small or CAPITAL");
      String alphabets=sc.nextLine();
      // letters alphabets;
      //   alphabets=letters.CAPITAL;
       // String alphabets="CAPITAL";
      switch(alphabets)
        {
          case "small":
            for(ch='a';ch<='z';ch++)  
            {
             System.out.print(ch);
            }
            break;
          case "CAPITAL":
             for(ch='A';ch<='Z';ch++)  
            {
             System.out.print(ch);
            }
            break;
          default:
            System.out.println("Enter valid input");
        }
    }
  }

62. Write a JAVAprogram to count total number of vowels and consonants in a string.

class Main {

  public static void main(String[] args) {
    String line = "This website is aw3som3.";
    int vowels = 0, consonants = 0, digits = 0, spaces = 0;

    line = line.toLowerCase();
    for (int i = 0; i < line.length(); ++i) {
      char ch = line.charAt(i);

      // check if character is any of a, e, i, o, u
      if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
        ++vowels;
      }

      // check if character is in between a to z
      else if ((ch >= 'a' && ch <= 'z')) {
        ++consonants;
      }
      
      // check if character is in between 0 to 9
      else if (ch >= '0' && ch <= '9') {
        ++digits;
      }
      
      // check if character is a white space
      else if (ch == ' ') {
        ++spaces;
      }
    }

    System.out.println("Vowels: " + vowels);
    System.out.println("Consonants: " + consonants);
    System.out.println("Digits: " + digits);
    System.out.println("White spaces: " + spaces);
  }
}

63. Write a JAVAprogram to count total number of words in a string.

import java.util.Scanner;
public class Exercise5 {

  public static void main(String[] args)
    {
        Scanner in = new Scanner(System.in);
        System.out.print("Input the string: ");
        String str = in.nextLine();

        System.out.print("Number of words in the string: " + count_Words(str)+"\n");
    }

 public static int count_Words(String str)
    {
       int count = 0;
        if (!(" ".equals(str.substring(0, 1))) || !(" ".equals(str.substring(str.length() - 1))))
        {
            for (int i = 0; i < str.length(); i++)
            {
                if (str.charAt(i) == ' ')
                {
                    count++;
                }
            }
            count = count + 1; 
        }
        return count; // returns 0 if string starts or ends with space " ".
    }
 }

65. Write a JAVAprogram to check whether a string is palindrome or not.

public class Palindrome
{
    public static void main(String args[])
    {
        String a, b = "";
        Scanner s = new Scanner(System.in);
        System.out.print("Enter the string you want to check:");
        a = s.nextLine();
        int n = a.length();
        for(int i = n - 1; i >= 0; i--)
        {
            b = b + a.charAt(i);
        }
        if(a.equalsIgnoreCase(b))
        {
            System.out.println("The string is palindrome.");
        }
        else
        {
            System.out.println("The string is not palindrome.");
        }
    }
}

66. Write a JAVAprogram to find first occurrence of a character in a given string.

import java.util.Scanner;

public class FirstCharOccurence1 {
	private static Scanner sc;
	public static void main(String[] args) {
		String firstCharStr;
		char ch;
		int i = 0, flag = 0;
		
		sc= new Scanner(System.in);

		System.out.print("\nEnter String to Find First Char Occur =  ");
		firstCharStr = sc.nextLine();
		
		System.out.print("\nEnter the Character to Find =  ");
		ch = sc.next().charAt(0);
		
		while(i < firstCharStr.length())
		{
			if(firstCharStr.charAt(i) ==  ch) {
				flag++;
				break;
			}
			i++;
		}
		if(flag == 0) {
			System.out.println("\nSorry! We haven't found the Character ");
		}
		else {
			System.out.format("\nThe First Character Occurrence of %c at %d position", 
					ch, i);
		}
	}

}

67. Write a JAVAprogram to find last occurrence of a character in a given string.


import java.util.Scanner;

public class LastCharOccurence1 {
	private static Scanner sc;
	public static void main(String[] args) {
		String lastCharStr;
		int i = 0, lIndex = -1;
		
		sc= new Scanner(System.in);

		System.out.print("\nPlease Enter String to find Last Occurrence =  ");
		lastCharStr = sc.nextLine();
		
		System.out.print("\nEnter the Last Character to Find =  ");
		int lsch = sc.next().charAt(0);
		
		while(i < lastCharStr.length())
		{
			if(lastCharStr.charAt(i) ==  lsch) {
				lIndex = i;
			}
			i++;
		}
		if(lIndex == -1) {
			System.out.println("\nSorry! We haven't found the Character ");
		}
		else {
			System.out.format("\nThe Last Character Occurrence of %c at %d position", lsch, lIndex);
		}
	}

}

68. Write a JAVAprogram to search all occurrences of a character in given string.

 
public class CountOccurences
{
  public static void main(String args[])
  {
      
  String input = "aaaabbccAAdd";
  char search = 'a';             // Character to search is 'a'.
  
  int count=0;
  for(int i=0; i<input.length(); i++)
  {
      if(input.charAt(i) == search)
      count++;
  }
  
  System.out.println("The Character '"+search+"' appears "+count+" times.");
  }
}
 

69. Write a JAVAprogram to count occurrences of a character in given string.

public class CountOccurences
{
  public static void main(String args[])
  {
      
  String input = "aaaabbccAAdd";
  char search = 'a';             // Character to search is 'a'.
  
  int count=0;
  for(int i=0; i<input.length(); i++)
  {
      if(input.charAt(i) == search)
      count++;
  }
  
  System.out.println("The Character '"+search+"' appears "+count+" times.");
  }
}

70. Write a JAVAprogram to find highest frequency character in a string.

import java.util.*;
public class Main {
 static final int N = 256;
 static char MaxOccuringChar(String str1) {
  int ctr[] = new int[N];
  int l = str1.length();
  for (int i = 0; i < l; i++)
   ctr[str1.charAt(i)]++;
  int max = -1;
  char result = ' ';

  for (int i = 0; i < l; i++) {
   if (max < ctr[str1.charAt(i)]) {
    max = ctr[str1.charAt(i)];
    result = str1.charAt(i);
   }
  }

  return result;
 }
 public static void main(String[] args) {
  String str1 = "test string";
  System.out.println("The given string is: " + str1);
  System.out.println("Max occurring character in the given string is: " + MaxOccuringChar(str1));
 }
}

71. Write a JAVAprogram to find lowest frequency character in a string.

public class HelloWorld  
   {
   public static void main(String[] args) 
   {    
      String str = "grass is greener on the other side";    
      int[] freq = new int[str.length()];    
      char minChar = str.charAt(0), maxChar = str.charAt(0);    
      int i, j, min;            
          
      char string[] = str.toCharArray();    
          
      for(i = 0; i < string.length; i++) 
	  {    
          freq[i] = 1;    
          for(j = i+1; j < string.length; j++) 
		  {    
              if(string[i] == string[j] && string[i] != ' ' && string[i] != '0') 
			  {    
                  freq[i]++;    
                      
                  string[j] = '0';    
              }    
          }    
      }    
          
      min = freq[0];    
      for(i = 0; i <freq.length; i++) 
	  {    
              
          if(min > freq[i] && freq[i] != '0') 
		  {    
              min = freq[i];    
              minChar = string[i];    
          }    
          
      }    
          
      System.out.println("Minimum occurring character: " + minChar);    
         
  }  
}

72. Write a JAVAprogram to count frequency of each character in a string

import java.util.Scanner;
public class CharacterCount {
    public static void main(String args[]) {
        String str;
        int i, length, counter[] = new int[256];
 
        Scanner scanner = new Scanner(System.in);
        System.out.println("Enter a String");
        str = scanner.nextLine();
 
        length = str.length();
 
        // Count frequency of every character and store
        // it in counter array
        for (i = 0; i < length; i++) {
            counter[(int) str.charAt(i)]++;
        }
        // Print Frequency of characters
        for (i = 0; i < 256; i++) {
            if (counter[i] != 0) {
                System.out.println((char) i + " --> " + counter[i]);
            }
        }
    }
}

73. Write a JAVAprogram to create a file and write contents, save and close the file.

import java.io.File;

class Main {
  public static void main(String[] args) {

    // create a file object for the current location
    File file = new File("JavaFile.java");

    try {

      // create a new file with name specified
      // by the file object
      boolean value = file.createNewFile();
      if (value) {
        System.out.println("New Java File is created.");
      }
      else {
        System.out.println("The file already exists.");
      }
    }
    catch(Exception e) {
      e.getStackTrace();
    }
  }
}

74. Write a JAVAprogram to read file contents and display on console.

import java.util.Scanner;
import java.io.*;

public class CodesCracker
{
    public static void main(String[] args)
    {
        String fname;
        Scanner scan = new Scanner(System.in);
        
        // enter filename along with its extension
        System.out.print("Enter the Name of File: ");
        fname = scan.nextLine();
        
        String line = null;
        try
        {
            FileReader fileReader = new FileReader(fname);
            
            // always wrap the FileReader in BufferedReader
            BufferedReader bufferedReader = new BufferedReader(fileReader);
            
            while((line = bufferedReader.readLine()) != null)
            {
                System.out.println(line);
            }
            
            // always close the file after its use
            bufferedReader.close();
        }
        catch(IOException ex)
        {
            System.out.println("\nError occurred");
            System.out.println("Exception Name: " +ex);
        }
    }
}

75. WAP to read numbers from a file and write even, odd and prime numbers to separate file.



76. Write a JAVAprogram to copy contents from one file to another file.

import java.io.*;  
import java.util.*;  
class Copyfile {  
 public static void main(String arg[]) throws Exception {  
  Scanner sc = new Scanner(System.in);  
  System.out.print("Provide source file name :");  
  String sfile = sc.next();  
  System.out.print("Provide destination file name :");  
  String dfile = sc.next();  
  FileReader fin = new FileReader(sfile);  
  FileWriter fout = new FileWriter(dfile, true);  
  int c;  
  while ((c = fin.read()) != -1) {  
   fout.write(c);  
  }  
  System.out.println("Copy finish...");  
  fin.close();  
  fout.close();  
 }  
}   

77. Write a JAVAprogram to merge two file to third file.

import java.io.*;
public class Demo {
   public static void main(String[] args) throws IOException {
      PrintWriter my_pw = new PrintWriter("path to third .txt file");

      BufferedReader my_br = new BufferedReader(new FileReader("path to first .txt file"));

      String my_line = my_br.readLine();

      while (my_line != null) 
      {
         my_pw.println(my_line);
         my_line = my_br.readLine();
      }

      my_br = new BufferedReader(new FileReader("path to second .txt file"));

      my_line = my_br.readLine();

      while(my_line != null) 
      {
         my_pw.println(my_line);
         my_line = my_br.readLine();
      }

      my_pw.flush();
      my_br.close();
      my_pw.close();
      System.out.println("The first two files have been merged into the third file successfully.");
   }
}

78. Write a JAVAprogram to count characters, words and lines in a text file.

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
 
public class WordCountInFile 
{   
    public static void main(String[] args) 
    {
        BufferedReader reader = null;
         
        //Initializing charCount, wordCount and lineCount to 0
         
        int charCount = 0;
         
        int wordCount = 0;
         
        int lineCount = 0;
         
        try
        {
            //Creating BufferedReader object
             
            reader = new BufferedReader(new FileReader("C:\\sample.txt"));
             
            //Reading the first line into currentLine
             
            String currentLine = reader.readLine();
             
            while (currentLine != null)
            {
                //Updating the lineCount
                 
                lineCount++;
                 
                //Getting number of words in currentLine
                 
                String[] words = currentLine.split(" ");
                 
                //Updating the wordCount
                 
                wordCount = wordCount + words.length;
                 
                //Iterating each word
                 
                for (String word : words)
                {
                    //Updating the charCount
                     
                    charCount = charCount + word.length();
                }
                 
                //Reading next line into currentLine
                 
                currentLine = reader.readLine();
            }
             
            //Printing charCount, wordCount and lineCount
             
            System.out.println("Number Of Chars In A File : "+charCount);
             
            System.out.println("Number Of Words In A File : "+wordCount);
             
            System.out.println("Number Of Lines In A File : "+lineCount);
        } 
        catch (IOException e) 
        {
            e.printStackTrace();
        }
        finally
        {
            try
            {
                reader.close();           //Closing the reader
            }
            catch (IOException e) 
            {
                e.printStackTrace();
            }
        }
    }   
}

79. WAP to check whether a number is prime, Armstrong or perfect number using functions.

public class VariousNumbers {  
 public static void main(String[] args) {  
  System.out.println("Armstrong Numbers 1 to 10000 >>");  
  for (int i = 1; i <= 10000; i++) {  
   if (Armstrong(i) == true) {  
    System.out.print(i + " ");  
   }  
  }  
  System.out.println("\nPalindrome Numbers 100 to 300 >>");  
  for (int i = 100; i <= 300; i++) {  
   if (Palindrome(i) == true) {  
    System.out.print(i + " ");  
   }  
  }  
  System.out.println("\nPrime Numbers up to 100 >>");  
  for (int i = 1; i <= 100; i++) {  
   if (Prime(i) == true) {  
    System.out.print(i + " ");  
   }  
  }  
 }  
 public static boolean Armstrong(int num) {  
  int num1 = num;  
  /* Converting Integer to String. It'll help to find number of 
  digits in the Integer by using length() */  
  String str = Integer.toString(num);  
  int rem;  
  int result = 0;  
  while (num > 0) {  
   rem = num % 10;  
   num = num / 10;  
   result = result + ((int) Math.pow(rem, str.length()));  
  }  
  if (result == num1) {  
   return true;  
  } else {  
   return false;  
  }  
 }  
 public static boolean Palindrome(int num) {  
  int num1 = num;  
  int rem;  
  int result = 0;  
  while (num > 0) {  
   rem = num % 10;  
   num = num / 10;  
   result = (result + rem) * 10;  
  }  
  result /= 10;  
  if (result == num1) {  
   return true;  
  } else {  
   return false;  
  }  
 }  
 public static boolean Prime(int num) {  
  if (num < 2) {  
   return false;  
  }  
  int div = num / 2;  
  for (int i = 2; i <= div; i++) {  
   if (num % i == 0) {  
    return false;  
   }  
  }  
  return true;  
 }  
}  

80. WAP to find all prime numbers between given interval using functions.

public class Prime {
public static void main(String[] args) {
int low = 20, high = 50;
while (low < high) {
if(checkPrimeNumber(low))
System.out.print(low + " ");
++low;
}
}
public static boolean checkPrimeNumber(int num) {
boolean flag = true;
for(int i = 2; i <= num/2; ++i) {
if(num % i == 0) {
flag = false;
break;
}
}
return flag;
}
}

81. WAP to print all strong numbers between given interval using functions.

import java.util.Scanner;
public class StrongNumberInRange {

 public static void main(String[] args) {
  Scanner cs=new Scanner(System.in);
  int firstnumber, endnumber, i;
        System.out.println("Enter the First number:");
        firstnumber=cs.nextInt();
        System.out.println("Enter the Last number:");
        endnumber=cs.nextInt();
    System.out.println("Strong numbers between "+firstnumber+" and "+endnumber+" are:");
    for(i=firstnumber;i<=endnumber;i++)
      {
       int num2=i;
       int num1=i;
       int sum=0;
       int fact=1;
      while(num1!=0)
      {   fact=1;
          int rem=num1%10;
          num1=num1/10;
          for(int j=1;j<=rem;j++)
           fact=fact*j;
          sum=sum+fact;
      }
      if(sum==num2)
       System.out.println(i+" ");
      }
  cs.close();
 }
}

82. WAP to print all Armstrong numbers between given interval using functions.

public class Armstrong {

    public static void main(String[] args) {

        int low = 999, high = 99999;

        for(int number = low + 1; number < high; ++number) {

            if (checkArmstrong(number))
                System.out.print(number + " ");
        }
    }

    public static boolean checkArmstrong(int num) {
        int digits = 0;
        int result = 0;
        int originalNumber = num;

        // number of digits calculation
        while (originalNumber != 0) {
            originalNumber /= 10;
            ++digits;
        }

        originalNumber = num;

        // result contains sum of nth power of its digits
        while (originalNumber != 0) {
            int remainder = originalNumber % 10;
            result += Math.pow(remainder, digits);
            originalNumber /= 10;
        }

        if (result == num)
            return true;

        return false;
    }
}

83. WAP to print all perfect numbers between given interval using functions.

public class Main {

    public static void main(String[] args) {
       
        for (int num = 1; num <= 1000; num++) {
            isItPerfectNumber(num);
        }
    }

    public static void isItPerfectNumber(int num) {
        int factor = 1;
        String factors = "Factors: ";
        int total = 0;
        while (factor < num) {
            if (num % factor == 0) {
                total += factor;
                factors += factor + " ";
            }
            factor++;
        }
        if (total == num) {
            System.out.printf("%s is perfect number\n", num);
            System.out.print(factors + "\n");
        }
    }
}


84. WAP to Print the Alternate Elements in an Array

import java.util.Scanner;

public class AlternateElementsArray {
 public static void main(String[] args) {
  int i, n;
  Scanner scan = new Scanner(System.in);
  System.out.print("How many numbers? \t");
  n = scan.nextInt();
  int a[] = new int[n];
  for (i = 0; i < n; i++) {
   System.out.print("Enter number " + (i + 1));
   a[i] = scan.nextInt();
  }
  scan.close();
  System.out.print("\nOriginal array is :\t");
  for (i = 0; i < n; i++)
   System.out.print(a[i] + "\t");

  System.out.print("\n\nAlternate elements :\t");
  for (i = 0; i < n; i = i + 2)
   System.out.print(a[i] + "\t");
 }
}

85. WAP to Display the ATM Transaction

import java.util.Scanner;
public class ATM_Transaction
{
    public static void main(String args[] )
    { 
        int balance = 5000, withdraw, deposit;
        Scanner s = new Scanner(System.in);
        while(true)
        {
            System.out.println("Automated Teller Machine");
            System.out.println("Choose 1 for Withdraw");
            System.out.println("Choose 2 for Deposit");
            System.out.println("Choose 3 for Check Balance");
            System.out.println("Choose 4 for EXIT");
            System.out.print("Choose the operation you want to perform:");
            int n = s.nextInt();
            switch(n)
            {
                case 1:
                System.out.print("Enter money to be withdrawn:");
                withdraw = s.nextInt();
                if(balance >= withdraw)
                {
                    balance = balance - withdraw;
                    System.out.println("Please collect your money");
                }
                else
                {
                    System.out.println("Insufficient Balance");
                }
                System.out.println("");
                break;
 
                case 2:
                System.out.print("Enter money to be deposited:");
                deposit = s.nextInt();
                balance = balance + deposit;
                System.out.println("Your Money has been successfully depsited");
                System.out.println("");
                break;
 
                case 3:
                System.out.println("Balance : "+balance);
                System.out.println("");
                break;
 
                case 4:
                System.exit(0);
            }
        }
    }
}

86. WAP to print reverse case of a given string

import java.util.*;
class ReverseString
{
  public static void main(String args[])
  {
    String original, reverse = "";
    Scanner in = new Scanner(System.in);

    System.out.println("Enter a string to reverse");
    original = in.nextLine();

    int length = original.length();

    for (int i = length - 1 ; i >= 0 ; i--)
      reverse = reverse + original.charAt(i);

    System.out.println("Reverse of the string: " + reverse);
  }
}
